{"version":3,"sources":["static/images/award.svg","static/images/logo.svg","static/images/game.svg","static/images/book.svg","static/images/background.png","firebase/firebase.js","constants/colors.js","pages/components/BodyContent.jsx","pages/components/Icon.jsx","pages/components/NavMenu.jsx","pages/components/Footer.jsx","pages/components/Button.jsx","pages/gameboard/components/ExplanationModal.jsx","lib/toastfy.js","pages/gameboard/components/ShowQuestion.jsx","static/locale/common.js","lib/yup.js","pages/components/modals/PlayerFormModal.jsx","pages/gameboard/components/GameResume.jsx","lib/persistence.js","games/firstgame.js","pages/gameboard/index.js","lib/gameSelector.js","pages/components/Modal.jsx","pages/games/components/GameCard.jsx","pages/games/index.js","pages/components/Header.jsx","pages/landing/componens/ResumeSection.jsx","pages/landing/componens/RulesSection.jsx","pages/landing/index.js","core/theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","white","Background","styled","Grid","BodyContent","children","height","useHistory","location","pathname","container","justify","alignContent","direction","style","Icon","button","color","MIcon","onClick","setColor","colors","size","variant","Styled","withStyles","theme","Wrapper","p","Option","breakpoints","down","handleMenuClick","options","history","textColor","bgColor","data-color","map","option","item","xs","readOnly","title","internal","push","href","external","target","getRouteProp","alignItems","icon","Footer","props","menuOptions","InstagramIcon","Divider","CustomDiv","div","CustomButton","Button","btnStyle","backgroundColor","width","setSize","CustomDialogActions","DialogActions","CustomDialog","root","textAlign","paper","border","backgroundSize","Dialog","ExplanationModal","explanation","actionLabel","open","handleClose","onClose","aria-labelledby","DialogContent","DialogContentText","id","spacing","position","toast","POSITION","TOP_RIGHT","idsTypes","success","error","show","isReady","isActive","configure","msg","toastId","errorList","errors","timeout","i","setTimeout","AnwserBtn","handleClick","selected","LineButton","Question","ShowQuestion","question","handleCorrectResponse","handleMistake","React","useState","isOpen","setIsOpen","asking","alternatives","alt","k","isAnwser","Toast","checkAnwser","text","validations","min","yup","mixed","required","common","string","key","max","number","integer","positive","boolean","date","object","array","CustomTextField","borderBottomColor","TextField","pStyle","margin","PlayerFormModal","db","firestore","validationSchema","shape","name","onSubmit","values","formikBag","a","instagram","collection","add","initialValues","touched","field","label","helperText","type","MainContainer","SubTitle","Title","GameResume","gameTime","mistakes","onDev","username","setUsername","src","Award","items","setGameStart","cookie","set","setMatchMistakes","amount","BackgroundContainer","GameContent","GameData","Gameboard","URLSearchParams","useLocation","search","get","startGameTime","playingTime","setPlayingTime","parseInt","setMistakes","twoDigitsParser","time","intervalID","setIntervalID","timeCounter","setInterval","currentMoment","Date","now","minutes","getMinutes","seconds","getSeconds","timeToString","timeUp","useEffect","game","firstgame","gameSelector","questions","currentQuestionIndex","setCurrentQuestionIndex","resumeGame","setResumeGame","data-playing","length","v","clearInterval","Modal","content","action","handleOutsideClick","aria-describedby","DialogTitle","SquaredContainer","TextIcon","GameCard","textIcon","onGameBegin","setOpen","SportsEsportsRounded","fontSize","Games","md","gameId","HeaderContainer","Header","display","to","Description","span","ResumeSection","start","Logo","marginTop","Rule","h1","RulesSection","maxWidth","Game","Book","skyBackground","Landing","startGame","createMuiTheme","StyledCanvas","App","className","ThemeProvider","Theme","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.776d4c11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/award.ebd41b87.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.38d0ad3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/game.fcb188cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.b9372177.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.ca8f2220.png\";","import firebase from 'firebase'\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n}\n\nfirebase.initializeApp(config)\nfirebase.analytics()\n\nexport default firebase\n","/**\n * @name Colors\n * @description\n * Application colors assigned to names.\n * @see http://chir.ag/projects/name-that-color\n */\n\n// /// Default color palete /// //\n\n// Original Design palete\nexport const smoky = '#585374'\nexport const steelBlue = '#538CB6'\nexport const wedgewood = '#4A83A6'\nexport const blueChill = '#0D7E8B'\nexport const cornflowerBlue = '#281370'\nexport const cornflowerBlueLigth = '#DDD6F6'\n\n// Quizizz palete\nexport const lividBrown = '#462042'\nexport const concrete = '#F2F2F2'\n\n// Purple to blue palete\nexport const eastbay = '#4E3D74'\nexport const butterflyBush = '#5B52A5'\nexport const sanMarino = '#5364B4'\nexport const danube = '#5680CC'\nexport const havelockBlue = '#519CD5'\nexport const pictonBlue = '#4DBBE0'\nexport const scooter = '#44CFDC'\n\n// /// ZP Palette /// //\n\n// Gray scale\nexport const white = '#FFFFFF'\nexport const wildBlueYonder = '#8686B3'\nexport const kimberlyGray = '#737399'\nexport const cometGray = '#606080'\nexport const mulledWineGray = '#4D4D66'\nexport const brightGray = '#3A3A4D'\nexport const black = '#000000'\n\n// Purple scale\nexport const mediumPurple = '#714EDA' // Main\nexport const studioPurple = '#5D40B3' // Dark\nexport const royalBlue = '#7752E6' // Alt\nexport const heliotropePurple = '#845BFF' // Light\nexport const gigasPurple = '#553BA4' // Darker\n\n// Pink scale\nexport const razzmatazzPink = '#ED0C76' // Main\nexport const lipstickPink = '#BA095D' // Dark\nexport const razzmatazzDarkPink = '#D40B69' // Alt\nexport const rosePink = '#FF0D7F' // Light\n\n// Green scale\nexport const robinEggBlue = '#00E7BA' // Main\nexport const caribbeanGreen = '#00BF9A' // Dark\nexport const caribbeanDarkGreen = '#00D9AF' // Alt\nexport const brightTurquoiseGreen = '#00F5C5' // Light\n\n// Yellow scale\nexport const schoolBusYellow = '#FFD800' // Main\nexport const selectiveYellow = '#F6B504' // Dark\nexport const lightningYellow = '#FFC21C' // Alt\nexport const brightSunYellow = '#FFDF30' // Light\n\n// Red scale\nexport const red = '#FF0000'\nexport const pomegranateRed = '#F44336'\n\n// /// Custom Palette /// //\n\nexport const athensGray = '#F6F6F8'\nexport const galleryGray = '#ECECEC'\nexport const bombayGray = '#B8B8BB'\nexport const abbeyGray = '#4A4A52'\n\nexport const portagePurple = '#AF8AF4'\nexport const parsleyGreen = '#1B5E20'\nexport const toryBlue = '#0D47A1'\nexport const cinnabarRed = '#E53935'\nexport const ecstasyOrange = '#F57F17'\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport { Grid } from '@material-ui/core'\n// Others\nimport * as colors from '../../constants/colors'\n\nconst Background = styled(Grid)`\n  background: linear-gradient(\n    /* ${colors.cornflowerBlueLigth}, */\n    ${colors.steelBlue},\n    /* ${colors.blueChill} */\n    ${colors.lividBrown}\n  );\n  height: 89vh;\n  width: 100vw;\n  text-align: center;\n  overflow: hidden;\n`\n\nconst BodyContent = ({ children }) => {\n  const history = useHistory()\n  const height = history.location.pathname === '/'\n    ? { height: '94.5vh' } : {}\n\n  return (\n    <Background container justify=\"center\" alignContent='center' direction=\"row\" style={height}>\n      {children}\n    </Background>\n  )\n}\n\nexport default BodyContent\n","import React from 'react'\n// Material-UI Components\nimport { Button } from '@material-ui/core'\n// Others\nimport * as colors from '../../constants/colors'\n\nconst Icon = ({\n  button = false,\n  color = 'default',\n  MIcon,\n  onClick = () => {},\n}) => {\n  const setColor = () => {\n    switch (color) {\n      case 'primary': return `${colors.mediumPurple}`\n      case 'secondary': return `${colors.white}`\n      default: return `${colors.abbeyGray}`\n    }\n  }\n\n  return (\n    <div>\n      {\n        button\n          ? <Button\n              size='small'\n              variant='outlined'\n              onClick={onClick}\n            >\n            <MIcon style={{ color: setColor() }} />\n          </Button>\n          : <MIcon style={{ color: setColor() }} />\n      }\n    </div>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport styled from 'styled-components'\nimport { withStyles } from '@material-ui/core/styles'\nimport { useHistory } from 'react-router-dom'\n// Material-UI\nimport { Grid } from '@material-ui/core'\n// Custom components\nimport Icon from'./Icon'\n// Others\nimport * as colors from '../../constants/colors'\n\nconst Styled = {}\nconst styles = (theme) => {\n  Styled.Wrapper = styled(Grid)`\n    align-items: center;\n    background-color: ${p => p['data-color']};\n    height: 5vh;\n  `\n\n  Styled.Option = styled(Grid)`\n    color: ${p => p['data-color']};\n    display: inline;\n    margin: 0 10px !important;\n    ${theme.breakpoints.down('md')} {\n      margin: 0 3px !important;\n    }\n\n    a {\n      color: ${p => p['data-color']};\n      /* color: white; */\n      cursor: pointer;\n      text-decoration: none;\n\n      :hover {\n        font-weight: bold;\n      }\n    }\n  `\n}\n\nconst NavMenu = ({\n  handleMenuClick,\n  options,\n  variant, // TODO: text (default) or contained\n}) => {\n  const history = useHistory()\n\n  const color = history.location.pathname === '/signon' ? 'secondary' : 'primary'\n  const textColor = color === 'primary' ? colors.white : colors.lividBrown\n  const bgColor = color === 'primary' ? colors.lividBrown : colors.white\n\n  const getRouteProp = option => {\n    if (option.internal) return { onClick: () => history.push(option.internal) }\n    return { href: option.external, target: '_blank' }\n  }\n\n  return (\n    <Styled.Wrapper container justify='center' data-color={bgColor}>\n      {options.map(option => (\n        <Styled.Option\n          item\n          xs='auto'\n          data-color={textColor}\n        >\n          {option.readOnly\n            ? (\n              <Grid item xs>\n                {option.title}\n              </Grid>\n            )\n            : (\n              <a { ...getRouteProp(option) } >\n                <Grid container justify='center' alignItems='center'>\n                  <Grid item xs>\n                    {option.title}\n                  </Grid>\n                  {\n                    option.icon\n                    ? (\n                      <Grid item xs>\n                        <Icon\n                          color={color === 'primary' ? 'secondary' : 'primary'}\n                          MIcon={option.icon}\n                        />\n                      </Grid>\n                    )\n                    : null\n                  }\n                </Grid>\n                </a>\n              )\n            }\n        </Styled.Option>\n      ))}\n    </Styled.Wrapper>\n  )\n}\n\nexport default withStyles(styles)(NavMenu)\n","import React from 'react'\n// Material-UI\nimport { Grid, Divider } from '@material-ui/core'\nimport InstagramIcon from '@material-ui/icons/Instagram'\n// Custom components\nimport NavMenu from './NavMenu'\n\nconst Footer = props => {\n  const menuOptions = [\n    { title: 'Desafio Covid', readOnly: true },\n    { icon: InstagramIcon, external: 'https://www.instagram.com/' },\n  ]\n\n  return (\n    <Grid\n      container\n      justify={'center'}\n      alignItems={'center'}\n      {...props}\n    >\n      <Grid item xs>\n        <Divider variant='middle'/>\n        <NavMenu options={menuOptions} variant={'text'} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as colors from '../../constants/colors'\n\nconst CustomDiv = styled.div`\n  align-content: center;\n  align-self: center;\n  border-radius: 30px;\n  color: white;\n  display: flex;\n  font-family: inherit;\n  font-weight: bold;\n  justify-content: center;\n  margin: 0 auto;\n  padding: 10px 25px;\n  width: max-content;\n\n  :hover {\n    background-color: ${colors.studioPurple};\n    box-shadow: 1px 1px 3px ${colors.abbeyGray};\n    cursor: pointer;\n  }\n`\n\nconst CustomButton = styled.button`\n  background: none;\n  border: none;\n  outline: none;\n`\n\n/**\n * Custom Button\n *\n * @param {String} color - primary (default) or secondary\n * @param {String} size - TODO: small, medium (default) or largest\n * @param {String} variant - TODO: text or contained (default)\n */\nconst Button = ({\n  color,\n  size = 'medium',\n  variant = 'contained',\n  children,\n  ...props\n}) => {\n  const setColor = color => {\n    switch (color) {\n      case 'alt': return {\n        backgroundColor: colors.razzmatazzDarkPink,\n        color: colors.white,\n      }\n      case 'secondary': return {\n        backgroundColor: colors.white,\n        color: colors.lividBrown,\n      }\n      case 'primary':\n      default: return {\n        backgroundColor: colors.lividBrown,\n      }\n    }\n  }\n\n  const setSize = size => {\n    switch (size) {\n      case 'large': return { width: '180px' }\n      case 'small': return { width: '100px' }\n      case 'medium':\n      default: return {}\n    }\n  }\n\n  const setVariant = variant => {\n    switch (variant) {\n      case 'text': return {}\n      case 'outllined': return {}\n      case 'contained':\n      default: return {}\n    }\n  }\n\n  const btnStyle = {\n    ...setColor(color),\n    ...setSize(size),\n  }\n\n  return (\n    <CustomButton {...props}>\n      <CustomDiv style={btnStyle}>\n        {children}\n      </CustomDiv>\n    </CustomButton>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Grid,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText\n} from '@material-ui/core'\n// Custom components\nimport Button from '../../components/Button'\n// Others\nimport * as colors from '../../../constants/colors'\n// import Award from '../../../static/images/award.svg'\n\nconst CustomDialogActions = styled(DialogActions)`\n  justify-content: center !important;\n  margin-bottom: 10px;\n`\n\nconst CustomDialog = withStyles(theme => ({\n  root: {\n    textAlign: 'center',\n  },\n  paper: {\n    border: `solid 2px ${colors.smoky}`,\n    [theme.breakpoints.down('md')]: { backgroundSize: '40%' }\n  },\n}))(Dialog)\n\nconst ExplanationModal = ({\n  explanation,\n  actionLabel,\n  open,\n  handleClose\n}) => {\n\n  return (\n    <CustomDialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n    >\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <Grid container direction='row' justify='flex-start' spacing={1}>\n            {/* Explanation text */}\n            <Grid item xs={12}>\n              <h4>{explanation}</h4>\n            </Grid>\n          </Grid>\n        </DialogContentText>\n      </DialogContent>\n\n      <CustomDialogActions>\n        <Button color='primary' onClick={handleClose}>\n          {actionLabel}\n        </Button>\n      </CustomDialogActions>\n    </CustomDialog>\n  )\n}\nexport default ExplanationModal\n","import { toast } from 'react-toastify'\n\nclass Toast {\n  style = {\n    position: toast.POSITION.TOP_RIGHT,\n  }\n\n  idsTypes = {\n    success: 10,\n    error: 20,\n    show: 30,\n  }\n\n  isReady = (id) => {\n    if (toast.isActive(id)) return false\n    toast.configure()\n    return true\n  }\n\n  /**\n   * Notify a success message\n   *\n   * @param {String} msg - message to be printed\n   */\n  success = (msg) => {\n    toast.configure()\n    if (this.isReady(this.idsTypes.success)) {\n      return toast.success(msg, { toastId: this.idsTypes.success, ...this.style })\n    }\n    return null\n  }\n\n  /**\n   * Notify an error message\n   *\n   * @param {String} msg - message to be printed\n   */\n  error = (msg) => {\n    toast.configure()\n    if (this.isReady(this.idsTypes.error)) {\n      return toast.error(msg, { ...this.style })\n    }\n    return null\n  }\n\n  /**\n   * Notify an array of error messages\n   *\n   * @param {Array} errors - errors messages to be printed\n   * @param {int} timeout - time between each notification\n   */\n  errorList = (errors, timeout = 1000) => (\n    errors.map((error, i) => setTimeout(() => {\n      this.error(error, { ...this.style })\n    }, timeout * i))\n  )\n\n  /**\n   * Notify a general message\n   *\n   * @param {String} msg - message to be printed\n   */\n  show = (msg) => {\n    toast.configure()\n    if (this.isReady(this.idsTypes.show)) {\n      return toast(msg, { toastId: this.idsTypes.show, ...this.style })\n    }\n    return null\n  }\n}\n\nexport default new Toast()\n","import React from 'react'\nimport styled from 'styled-components'\n// Material-UI\nimport { Grid, Divider } from '@material-ui/core'\n// Custom components\nimport ExplanationModal from './ExplanationModal'\n// Others\nimport * as colors from '../../../constants/colors'\nimport Toast from '../../../lib/toastfy'\n\nconst AnwserBtn = ({ handleClick, selected, children }) => {\n  const LineButton = styled.div`\n    background-color: ${selected ? colors.lividBrown : colors.razzmatazzDarkPink};\n    border-radius: 30px;\n    border-bottom: solid 4px ${colors.eastbay};\n    color: white;\n    margin: 0 auto;\n    padding: 13px 25px;\n    width: 200px;\n\n    font-size-adjust: 10;\n\n    :hover {\n      box-shadow: 1px 1px 3px ${colors.abbeyGray};\n      cursor: pointer;\n      opacity: 0.9;\n    }\n  `\n\n  return (\n    <a onClick={handleClick}><LineButton>{children}</LineButton></a>\n  )\n}\n\nconst Question = styled.div`\n  background-color: ${colors.white};\n  border-bottom: solid 3px ${colors.smoky};\n  border-radius: 0 0 100% 100%;\n  color: ${colors.smoky};\n  font-weight: bold;\n  padding: 5px 1rem 2rem;\n`\n\nconst ShowQuestion = ({\n  question,\n  handleCorrectResponse = () => {},\n  handleMistake = () => {},\n}) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  const { question: asking, alternatives, explanation } = question\n  const type = 'line'\n\n  const checkAnwser = (isAnwser) => {\n    if (isAnwser)  return setIsOpen(true)\n\n    Toast.error('Pense melhor...')\n    handleMistake()\n  }\n\n  const correctResponse = () => {\n    setIsOpen(false)\n    handleCorrectResponse()\n  }\n\n  return (\n    <Grid\n      container\n      alignContent=\"center\"\n      justify=\"center\"\n      spacing={2}\n    >\n      {/* Question */}\n      <Grid item xs={12}>\n        <Divider variant='middle'/>\n        <Question>\n          <p>{asking}</p>\n        </Question>\n      </Grid>\n\n      {/* Alternatives */}\n      {\n        alternatives.map((alt, k) => {\n          return type === 'line'\n          ? (\n            <Grid item xs={12}>\n              <AnwserBtn handleClick={() => checkAnwser(alt.isAnwser)}>\n                {alt.text}\n              </AnwserBtn>\n            </Grid>\n          )\n          : (\n            <p>{alt.text}</p>\n          )\n        })\n      }\n\n      {/* Anwser modal */}\n      <ExplanationModal\n        actionLabel={'Próxima pergunta'}\n        explanation={explanation}\n        open={isOpen}\n        handleClose={correctResponse}\n      />\n    </Grid>\n  )\n}\n\nexport default ShowQuestion\n","\n  export const CommonErrors = {\n    error: \"Algo de errado aconteceu =(\",\n    tryAgain: \"Tente novamente!\",\n    tryAgainLater: \"Tente novamente mais tarde!\",\n    typeCorrectly: \"Você digitou corretamente?\"\n  }\n\n  export default {\n  validations: {\n    'required': 'Campo obrigatório',\n    'invalid': 'Campo inválido',\n    'invalid-referral-code': 'Não há um usuário com esse código',\n    'invalid-cnpj': 'CNPJ inválido',\n    'invalid-cpf': 'CPF inválido',\n    'invalid-email': 'Email inválido',\n    'invalid-ddd': 'DDD iniciado com 0 é inválido',\n    'invalid-phone': 'Número telefônico inválido',\n    'invalid-veracity': 'Esta opção é obrigatória',\n    'number-min': 'Não pode ser menor que {{min}}',\n    'number-max': 'Não pode ser maior que {{max}}',\n    'pass-match': 'As senhas devem ser iguais',\n    'positive': 'O valor deve ser positivo',\n    'string-min': min => 'Deve conter, no mínimo, ${min} caracteres',\n    'string-max': 'Deve conter, no máximo, {{max}} caracteres',\n    'valueNotAvailable': 'Valor superior a quantia disponível',\n    'valueNotEnough': 'Valor mínimo: R$ 5,00',\n  }\n}\n","import * as yup from 'yup'\nimport common from '../static/locale/common'\n/**\n * @name setYupLocale\n * @description\n * Set's the message from form validation based on language currently loaded.\n * @see https://github.com/jquense/yup#using-a-custom-locale-dictionary\n * @see https://github.com/jquense/yup/issues/159\n */\nyup.setLocale({\n  mixed: {\n    required: common.validations['required'],\n  },\n  string: {\n    required: common.validations['required'],\n    min: ({ min }) => ({\n      key: 'string',\n      options: { min },\n    }),\n    max: ({ max }) => ({\n      key: common.validations['string-max'],\n      options: { max },\n    }),\n  },\n  number: {\n    required: common.validations['required'],\n    integer: common.validations['integer'],\n    positive: common.validations['positive'],\n    min: ({ min }) => ({\n      key: common.validations['number-min'],\n      options: { min },\n    }),\n    max: ({ max }) => ({\n      key: common.validations['number-max'],\n      options: { max },\n    }),\n  },\n  boolean: {\n    required: common.validations['required'],\n  },\n  date: {\n    required: common.validations['required'],\n  },\n  object: {\n    required: common.validations['required'],\n  },\n  array: {\n    required: common.validations['required'],\n  },\n})\n\nexport default yup\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Formik, Form, Field } from 'formik'\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Grid,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  TextField\n} from '@material-ui/core'\n// Custom components\nimport firebase from '../../../firebase/firebase'\nimport Button from '../Button'\n// Others\nimport * as colors from '../../../constants/colors'\n// import Award from '../../../static/images/award.svg'\nimport Toast from '../../../lib/toastfy'\nimport yup from '../../../lib/yup'\n\nconst CustomDialogActions = styled(DialogActions)`\n  justify-content: center !important;\n  margin-bottom: 10px;\n`\n\nconst CustomDialog = withStyles(theme => ({\n  root: {\n    textAlign: 'center',\n  },\n  paper: {\n    border: `solid 2px ${colors.smoky}`,\n  },\n}))(Dialog)\n\nconst CustomTextField = withStyles({\n  root: {\n    '& label': {\n      color: `${colors.lividBrown}`,\n    },\n    '& label.Mui-focused': {\n      color: `${colors.lividBrown}`,\n    },\n    '& .MuiFormHelperText-root': {\n      color: `${colors.lividBrown}`,\n    },\n    '& .MuiInput-input': {\n      color: `${colors.lividBrown}`,\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: `${colors.lividBrown}`,\n    },\n  },\n})(TextField)\n\nconst pStyle = {\n  margin: '2px 0' ,\n  color: colors.lividBrown,\n}\n\nconst PlayerFormModal = ({\n  open,\n  handleClose\n}) => {\n  const db = firebase.firestore()\n\n  const initialValues={ name: '', instagram: '@' }\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(),\n  })\n\n  const onSubmit = async (values, formikBag) => {\n    try {\n      const { name, instagram } = values\n      await db.collection('users').add({ name, instagram })\n\n      handleClose(name)\n    } catch (err) {\n      Toast.error('Erro ao salvar nome do jogador')\n    }\n  }\n\n  return (\n    <CustomDialog\n      open={open}\n      aria-labelledby=\"customized-dialog-title\"\n    >\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {/* <Grid container direction='row' justify='flex-start' spacing={1}>\n          </Grid> */}\n\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <Grid container direction='row' justify='center' spacing={2} >\n                  <Grid item xs={12}>\n                    <p style={pStyle}><b>Qual seu nome?</b></p>\n                    <p style={pStyle}>Caso você entre no ranking, te chamaremos assim</p>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    {/* Name field */}\n                    <Field name='name'>\n                      {({ field }) => (\n                        <CustomTextField\n                          {...field}\n                          error={errors['name'] && touched['name']}\n                          id=\"standard-error-helper-text\"\n                          label={'Seu nome'}\n                          helperText={errors['name'] || null}\n                        />\n                      )}\n                    </Field>\n                  </Grid>\n\n                  {/* Instagram field */}\n                  <Grid item xs={12}>\n                    <Field name='instagram'>\n                      {({ field }) => (\n                        <CustomTextField\n                          {...field}\n                          error={errors['instagram'] && touched['instagram']}\n                          id=\"standard-error-helper-text\"\n                          label={'Seu instagram (opcional)'}\n                        />\n                      )}\n                    </Field>\n                  </Grid>\n\n                  {/* Submit btn */}\n                  <Grid item xs={12}>\n                    <Button\n                      color='primary'\n                      type='submit'\n                      onClick={handleClose}\n                    >\n                      Salvar\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </DialogContentText>\n      </DialogContent>\n    </CustomDialog>\n  )\n}\nexport default PlayerFormModal\n","import React from 'react'\nimport styled from 'styled-components'\n// Material-UI\nimport { Grid } from '@material-ui/core'\nimport { Update, Error } from '@material-ui/icons'\n// Custom components\nimport Button from '../../components/Button'\nimport PlayerFormModal from '../../components/modals/PlayerFormModal'\nimport Toast from '../../../lib/toastfy'\n// Others\nimport * as colors from '../../../constants/colors'\nimport Award from '../../../static/images/award.svg'\n\nconst MainContainer = styled(Grid)`\n  height: 100%;\n  text-align: center;\n\n  h3 {\n    margin: 5px 0;\n    color: ${colors.razzmatazzDarkPink};\n  }\n\n  b {\n    color: ${colors.white};\n  }\n`\n\nconst SubTitle = styled.p`\n  color: ${colors.white};\n  margin: 5px 10px 20px;\n`\n\nconst Title = styled(SubTitle)`\n  font-size: 1.5rem;\n`\n\nconst GameResume = ({\n  gameTime,\n  mistakes,\n}) => {\n  const onDev = () => Toast.show('Recurso em densenvolvimento')\n\n  const [username, setUsername] = React.useState(null)\n\n  const [isOpen, setIsOpen] = React.useState(true)\n  const handleCloseModal = username => {\n    setUsername(username)\n    setIsOpen(false)\n  }\n\n  return (\n    <MainContainer\n      container\n      alignContent=\"center\"\n      justify=\"center\"\n    >\n      <PlayerFormModal open={isOpen} handleClose={handleCloseModal}/>\n      <Grid item xs={12}>\n        <img height={150} src={Award} alt='podium' />\n      </Grid>\n      <Grid item xs={12}>\n        <Title>\n          {`Parabéns, ${typeof username === 'string' ? username : ''}`}\n        </Title>\n      </Grid>\n\n      {/* Game Data */}\n      <Grid item xs={12}>\n        <b>Tempo de jogo</b>\n        <h3>{gameTime}</h3>\n      </Grid>\n      <Grid item xs={12}>\n        <b>Erros cometidos:</b>\n        <h3>{mistakes}</h3>\n      </Grid>\n\n      <Grid item xs={12}>\n        <SubTitle>\n          Informação é poder! Compartilhe esse jogo com mais pessoas. #DesafioCovid\n        </SubTitle>\n      </Grid>\n\n      {/* Actions */}\n      <Grid items xs={12}>\n        <Button onClick={onDev} color='alt' size='large'>Compartilhar no Whatsapp</Button>\n      </Grid>\n      <Grid items xs={12}>\n        <Button onClick={onDev} color='secondary' size='large'>Ver Ranking</Button>\n      </Grid>\n    </MainContainer>\n  )\n}\n\nexport default GameResume\n","import cookie from 'js-cookie'\n\n// Game start event\n\nexport const setGameStart = date => {\n  cookie.set('start', date)\n}\n\nexport const getGameStart = () => cookie.get('start')\n\n// Mistakes events\n\nexport const setMatchMistakes = amount => {\n  cookie.set('mistakes', amount)\n}\n\nexport const getMatchMistakes = () => parseInt(cookie.get('mistakes'))\n","  export default {\n    id: '01',\n    title: 'Quiz Inicial',\n    alternatives: [\n      {\n        question: 'Quais dessas opções é a mais eficaz para impedir a disseminação do Coronavírus no Brasil?',\n        alternatives: [\n          { text: 'Tomando chás e vitamina C'},\n          { text: 'Isolamento vertical'},\n          { text: 'Isolamento social', isAnwser: true },\n          { text: 'Usando luvas e máscaras'},\n        ],\n        explanation: 'De acordo com a OMS, o isolamento social é a melhor forma de diminuir possíveis fatalidades e retornar o mais rápido possível a nossa vida normal.',\n      },\n\n      {\n        question: 'Qual medicamento se mostrou eficaz e oferece a cura para o COVID-19?',\n        alternatives: [\n          { text: 'Hidroxicloroquina'},\n          { text: 'Dipirona'},\n          { text: 'Ibuprofeno'},\n          { text: 'Não há medicamentos contra o Coronavírus', isAnwser: true },\n        ],\n        explanation: 'De acordo com a OMS, ainda não há estudos que comprovem a eficácia de qualquer remédio contra o Coronavírus.',\n      },\n\n      {\n        question: 'Fake ou News: Qualquer máscara me protege de contrair o novo Coronavírus.',\n        alternatives: [\n          { text: 'Fake', isAnwser: true },\n          { text: 'News'},\n        ],\n        explanation: 'Máscaras ajudam você a não espalhar o vírus, mas não impedem que você o contraia. Além disso, não existe material suficiente para profissionais de saúde e usar essas máscaras sem indicação pode acabar prejudicando o atendimento de pessoas doentes.',\n      },\n\n      {\n        question: 'Qual opção mais eficaz para higienizar as mãos e evitar contágio?',\n        alternatives: [\n          { text: 'Álcool gel 70%'},\n          { text: 'Água e sabão', isAnwser: true },\n          { text: 'Álcool líquido'},\n          { text: 'Desinfetante'},\n        ],\n        explanation: 'Álcool em gel 70% e água e sabão são igualmente eficientes na ação antimicrobiana, contra bactérias, fungos e vírus. Entretanto, o álcool não pode simplesmente substituir a água e o sabão, uma vez que a retirada de partículas de sujeiras não pode ser feita com o álcool.',\n      },\n\n      {\n        question: 'Fake ou News: O novo Coronavírus não consegue sobreviver a \"temperaturas entre 26º e 27º.',\n        alternatives: [\n          { text: 'Fake', isAnwser: true },\n          { text: 'News'},\n        ],\n        explanation: 'O Novo Coronavírus consegue facilmente suportar temperaturas superiores à 27º. A diretora do IMT-USP Ester Sabino, afirma: \"A temperatura do corpo humano é 36ºC\". Portanto, esta afirmativa é falsa.',\n      },\n\n      {\n        question: 'Qual o nome científico do novo Coronavírus',\n        alternatives: [\n          { text: 'Vírus Chines'},\n          { text: 'Covid-19'},\n          { text: 'H1N1'},\n          { text: 'Sars-Cov-2', isAnwser: true },\n        ],\n        explanation: 'O nome científico, definido pela OMS, é SARS-CoV-2. Chamar essa doença de “vírus chinês”, além de cientificamente incorreto, é bastante ofensivo. Então, na hora de escolher como chamá-lo, fique no lado da ciência. Ah, COVID-19 é o nome da doença causada pelo Sars-cov-2 ;)',\n      },\n\n      {\n        question: 'Qual desses grupos corre mais risco na luta contra o Coronavírus?',\n        alternatives: [\n          { text: 'Idosos (+60 anos)', isAnwser: true },\n          { text: 'Adultos'},\n          { text: 'Crianças '},\n          { text: 'Animais'},\n        ],\n        explanation: 'O vírus é mais letal para idosos e pessoas com doenças crônicas. Boa parte das crianças, jovens e adultos podem contrair o vírus assintomaticamente, ou seja, não apresentarão nenhum sintoma. E sobre o seu pet, fique tranquilo. Estudos mostram que ele vai ficar bem seguro durante a pandemia.',\n      },\n\n      {\n        question: 'Fake ou News: A maioria das pessoas fora do grupo de risco não sentem sintomas fortes. Por isso, podem e devem transitar livremente, enquanto os mais vulneráveis ficam em quarentena.',\n        alternatives: [\n          { text: 'Fake', isAnwser: true },\n          { text: 'News'},\n        ],\n        explanation: 'Todos devem ficar em casa para garantir que o Coronavírus cause o menor número de vítimas possível. Uma criança, por exemplo, mesmo sem apresentar nenhum sintoma, pode carregar o vírus no seu organismo e infectar dezenas de pessoas, ajudando a sobrecarregar o sistema de saúde, impedindo que outros tenham acesso ao tratamento adequado.',\n      }\n    ]\n  }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation } from 'react-router-dom'\n// Material-UI\nimport { Grid } from '@material-ui/core'\n// Custom components\nimport ShowQuestion from './components/ShowQuestion'\nimport GameResume from './components/GameResume'\n// Others\nimport * as colors from '../../constants/colors'\nimport {\n  getGameStart,\n  getMatchMistakes,\n  setMatchMistakes } from '../../lib/persistence'\nimport gameSelector from '../../lib/gameSelector'\n\nconst BackgroundContainer = styled(Grid)`\n  background: linear-gradient(\n    ${colors.concrete},\n    ${colors.lividBrown}\n  );\n  height: 100%;\n`\n\nconst GameContent = styled(Grid)`\n  height: 100%;\n  max-width: 700px !important;\n`\n\nconst GameData = styled(Grid)`\n  background-color: ${colors.white};\n  color: ${colors.razzmatazzPink};\n  height: min-content;\n  padding: 5px;\n\n  p {\n    margin: 0;\n  }\n`\n\nconst Gameboard = () => {\n  const query = new URLSearchParams(useLocation().search)\n  const { id } = query.get('id')\n\n  const [startGameTime] = React.useState(getGameStart())\n  const [playingTime, setPlayingTime] = React.useState('00:00')\n\n  const [mistakes, setMistakes] = React.useState(getMatchMistakes())\n\n  const twoDigitsParser = time => time >= 10 ? `${time}` : `0${time}`\n\n  const timeUp = () => {\n    const currentMoment = new Date(Date.now() - startGameTime)\n    const minutes = twoDigitsParser(currentMoment.getMinutes())\n    const seconds = twoDigitsParser(currentMoment.getSeconds())\n\n    const timeToString = `${minutes}:${seconds}`\n    setPlayingTime(timeToString)\n  }\n\n  const [intervalID, setIntervalID] = React.useState(false)\n\n  const timeCounter = () => setInterval(() => timeUp(), 1000)\n\n  React.useEffect(() => {\n    setIntervalID(timeCounter())\n  }, [1])\n\n  const game = gameSelector(id)\n  const questions = game.alternatives\n  const [currentQuestionIndex, setCurrentQuestionIndex] = React.useState(0)\n  const [resumeGame, setResumeGame] = React.useState(false)\n\n  const nextQuestion = () => {\n    if ((currentQuestionIndex + 1) < questions.length) {\n      return setCurrentQuestionIndex(v => v + 1)\n    }\n\n    // Game End\n    clearInterval(intervalID)\n    setResumeGame(true)\n  }\n\n  return (\n    <BackgroundContainer\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignContent=\"flex-start\"\n    >\n      <GameContent container alignContent=\"flex-start\" data-playing={false}>\n        {\n          !resumeGame ? (\n            <Grid item xs={12} style={{ backgroundColor: 'white', height: 'min-content' }}>\n              <GameData container>\n                <Grid item xs={2}>\n                  {playingTime}\n                </Grid>\n                <Grid item xs={3}>\n                  {`Erros: ${mistakes}`}\n                </Grid>\n                <Grid item xs={5}>\n                  <b>{game.title}</b>\n                </Grid>\n                <Grid item xs={2}>\n                 <p><b>{currentQuestionIndex + 1}</b>{`/${questions.length}`}</p>\n                </Grid>\n              </GameData>\n            </Grid>\n          ) : null\n        }\n\n        <Grid item xs={12}>\n          {\n            resumeGame\n              ? <GameResume\n                  gameTime={playingTime}\n                  mistakes={mistakes}\n                />\n              : <ShowQuestion\n                question={questions[currentQuestionIndex]}\n                handleCorrectResponse={nextQuestion}\n                handleMistake={() => setMistakes(v => {\n                  setMatchMistakes(v + 1)\n                  return v + 1\n                })}\n              />\n          }\n        </Grid>\n      </GameContent>\n    </BackgroundContainer>\n  )\n}\n\nexport default Gameboard\n","import firstgame from '../games/firstgame'\n\n\nexport default id => {\n  switch (id) {\n    case '01': return firstgame\n    default: return firstgame\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Grid,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core'\n// Custom components\nimport Button from './Button'\n// Others\nimport * as colors from '../../constants/colors'\n\nconst CustomDialogActions = styled(DialogActions)`\n  justify-content: center !important;\n  margin-bottom: 10px;\n`\n\nconst Modal = ({\n  title,\n  content,\n  action,\n  // handles\n  open,\n  handleClose,\n  handleOutsideClick,\n  ...props\n}) => {\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby=\"customized-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      {...props}\n      onClose={handleOutsideClick}\n    >\n      {\n        title\n          ? (\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n          )\n          : null\n      }\n\n\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {content}\n        </DialogContentText>\n      </DialogContent>\n\n      <CustomDialogActions>\n        <Button color='primary' onClick={handleClose}>\n          {action}\n        </Button>\n      </CustomDialogActions>\n    </Dialog>\n  )\n}\nexport default Modal\n","import React from 'react'\nimport styled from 'styled-components'\n// Material-UI\nimport { Grid } from '@material-ui/core'\nimport { SportsEsportsRounded } from '@material-ui/icons'\n// Custom components\nimport Icon from'../../components/Icon'\nimport Modal from '../../components/Modal'\n// Others\nimport * as colors from '../../../constants/colors'\n\nconst SquaredContainer = styled(Grid)`\n  background-color: ${colors.razzmatazzPink};\n  border-bottom: solid 4px ${colors.lipstickPink};\n  border-radius: 20px;\n  cursor: pointer;\n  height: 100px;\n  width: 100px;\n`\n\nconst Title = styled.p`\n  color: ${colors.galleryGray};\n`\n\nconst TextIcon = styled.p`\n  color: ${colors.white};\n  font-weight: bold;\n  font-size: 3rem;\n  margin: 5px 0;\n`\n\nconst GameCard = ({\n  title,\n  icon,\n  textIcon,\n  // handlers\n  onGameBegin,\n}) => {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <>\n      <SquaredContainer\n        container\n        alignContent={'center'}\n        justify={'center'}\n        onClick={() => setOpen(true)}\n      >\n        {/* title */}\n        <Grid item xs={12} style={{ height: '2rem'}}>\n          <Title>{title}</Title>\n        </Grid>\n\n        {\n          textIcon\n            ? (\n              <Grid item xs={12}>\n                <TextIcon>{textIcon}</TextIcon>\n              </Grid>\n            )\n            : (\n              <Grid item xs={12}>\n                <Icon\n                  color={'secondary'}\n                  MIcon={icon || SportsEsportsRounded}\n                  fontSize={'large'}\n                />\n              </Grid>\n            )\n        }\n      </SquaredContainer>\n\n      <Modal\n        title={title}\n        content={'Responda todas as perguntas no menor tempo que conseguir e tente não errar nas respostas. Assim você consiguirar mais pontos ao fim do jogo.'}\n        action={'Começar o jogo'}\n        open={open}\n        handleClose={onGameBegin}\n        handleOutsideClick={() => setOpen(false)}\n      />\n    </>\n  )\n}\n\nexport default GameCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\n// Material-UI\nimport { Grid } from '@material-ui/core'\n// Custom components\nimport GameCard from './components/GameCard'\n// Others\nimport * as colors from '../../constants/colors'\nimport { setGameStart, setMatchMistakes } from '../../lib/persistence'\n\nconst MainContainer = styled(Grid)`\n  background-color: ${colors.lividBrown};\n  height: 100%;\n  max-width: 700px !important;\n`\n\nconst Games = () => {\n  const history = useHistory()\n\n  const startGame = gameId => {\n    history.push(`/jogar?id=${gameId}`)\n    setGameStart(Date.now())\n    setMatchMistakes(0)\n  }\n\n  const games = [\n    { id: '01', title: 'Quiz Inicial' },\n  ]\n\n  return (\n    <MainContainer\n      container\n      alignContent={'center'}\n      justify={'space-around'}\n    >\n      {\n        games.map((game, k) => (\n          <Grid items xs={5} md={3} style={{ margin: '5px' }}>\n            <GameCard title={game.title} textIcon={k + 1} onGameBegin={() => startGame(game.id)} />\n          </Grid>\n        ))\n      }\n    </MainContainer>\n  )\n}\n\nexport default Games\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useHistory, Link } from \"react-router-dom\"\n// Material-UI\nimport { Grid } from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles'\n// Others\nimport * as colors from '../../constants/colors'\n\nconst HeaderContainer = styled(Grid)`\n  background-color: ${colors.white};\n  height: 6vh;\n\n  p {\n    color: ${colors.lividBrown};\n    font-weight: bold;\n    font-size: 2rem;\n  }\n  a {\n    text-decoration: none;\n  }\n`\n\nconst Header = () => {\n  const history = useHistory()\n  const show = () => history.location.pathname !== '/'\n    ? {} : { display: 'none' }\n\n  return (\n    <HeaderContainer\n      container\n      justify={'center'}\n      alignContent={'center'}\n      style={{ ...show()}}\n    >\n      <Grid item xs>\n        <Link to='/'>\n          <p>Desafio Covid</p>\n        </Link>\n      </Grid>\n    </HeaderContainer>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HashLink as Link } from 'react-router-hash-link'\n// Material-UI\nimport { Grid } from '@material-ui/core'\n// Custom Settings\nimport Button from '../../components/Button'\n// Others\nimport * as colors from '../../../constants/colors'\n// Images\nimport Logo from '../../../static/images/logo.svg'\n\nconst MainContainer = styled(Grid)`\n  height: 100%;\n`\n\nconst Description = styled.span`\n  color: ${colors.athensGray};\n`\n\nconst ResumeSection = ({ start }) => {\n\n  return (\n    <MainContainer container alignContent='center'>\n      <Grid item xs={12}>\n        <img src={Logo} alt='Desafio Covid' />\n      </Grid>\n\n      <Grid item xs={12}>\n        <Description>\n          <p>O jogo que ajuda você a combater o Novo Coronavírus e qualquer fakenews.</p>\n          <b>É hora de disseminar bons hábitos.</b>\n        </Description>\n      </Grid>\n\n      <Grid item xs={12} style={{ marginTop: '1rem' }}>\n        {/* <Link to=\"/jogos\"> */}\n          <Button color=\"primary\" onClick={start}>\n            Jogar Agora\n          </Button>\n        {/* </Link> */}\n      </Grid>\n\n      <Grid item xs={12} style={{ marginTop: '1rem' }}>\n        <Link to=\"#rules\">\n          <Button color=\"secondary\">\n            Como Jogar\n          </Button>\n        </Link>\n      </Grid>\n    </MainContainer>\n  )\n}\n\nexport default ResumeSection\n","import React from 'react'\nimport styled from 'styled-components'\n// import { HashLink as Link } from 'react-router-hash-link'\n// Material-UI\nimport { Grid } from '@material-ui/core'\n// Custom Settings\nimport Button from '../../components/Button'\n// Others\nimport * as colors from '../../../constants/colors'\nimport Game from '../../../static/images/game.svg'\nimport Book from '../../../static/images/book.svg'\nimport Award from '../../../static/images/award.svg'\n\nconst MainContainer = styled(Grid)`\n  height: 100%;\n  text-align: center;\n  padding: 0 10px;\n`\n\nconst Rule = styled(Grid)`\n  padding: 5px;\n`\n\nconst Title = styled.h1`\n  color: ${colors.white};\n`\n\nconst Description = styled.span`\n  color: ${colors.athensGray};\n`\n\nconst RulesSection = ({ start }) => {\n  return (\n    <MainContainer\n      id=\"rules\"\n      container\n      alignContent='flex-start'\n      justify='space-between'\n    >\n      <Grid item style={{ maxWidth: '600px' }}>\n        <Grid item xs={12}>\n          <Title>O jogo é simples!</Title>\n        </Grid>\n\n        <Grid item xs={12} style={{ textAlign: 'left' }}>\n          <Rule container direction=\"row\" alignContent=\"flex-start\">\n            <Grid item xs>\n              <Description>\n                Responda <b>corretamente</b> as questões, que envolvem tópicos importantes sobre o <b>coronavírus</b> e como combatê-lo.\n              </Description>\n            </Grid>\n            <Grid item xs={4}>\n              <img height={100} src={Game}></img>\n            </Grid>\n          </Rule>\n        </Grid>\n\n        <Grid item xs={12} style={{ textAlign: 'right' }}>\n          <Rule container direction=\"row\" alignContent=\"flex-end\"\n          >\n            <Grid item xs={4}>\n              <img height={100} src={Book}></img>\n            </Grid>\n            <Grid item xs>\n              <Description>\n                O objetivo é <b>acertar o maior número de respostas</b> no menor tempo possível. Além de eliminar suas dúvidas sobre a pandemia.\n              </Description>\n            </Grid>\n          </Rule>\n        </Grid>\n\n        <Grid item xs={12} style={{ textAlign: 'left' }}>\n          <Rule container direction=\"row\" alignContent=\"flex-start\"\n          >\n            <Grid item xs>\n              <Description>\n                As melhores pontuações, ganharão um <b>destaque</b> no nosso Painel dos Campeões e serão lembradas como as <b>melhores combatentes de fakenews do COVID-19 do Brasil.</b>\n              </Description>\n            </Grid>\n            <Grid item xs={4} style={{ textAlign: 'right' }}>\n              <img height={100} src={Award}></img>\n            </Grid>\n          </Rule>\n        </Grid>\n\n        <Grid item xs={12} style={{ marginTop: '1rem' }}>\n          {/* <Link to=\"/jogos\"> */}\n            <Button color=\"secondary\" onClick={start}>\n              Jogar Agora\n            </Button>\n          {/* </Link> */}\n        </Grid>\n      </Grid>\n    </MainContainer>\n  )\n}\n\nexport default RulesSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\n// Material-UI\nimport { Grid } from '@material-ui/core'\n// Custom Settings\nimport ResumeSection from './componens/ResumeSection'\nimport RulesSection from './componens/RulesSection'\n// Others\nimport { setGameStart, setMatchMistakes } from '../../lib/persistence'\nimport skyBackground from '../../static/images/background.png'\n\nconst BackgroundContainer = styled(Grid)`\n  background-image: url(${skyBackground});\n  background-position: center;\n  background-size: cover;\n  height: 95vh;\n  scroll-behavior: smooth;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`\n\nconst Landing = () => {\n  const history = useHistory()\n\n  const startGame = gameId => {\n    history.push(`/jogar?id=${gameId}`)\n    setGameStart(Date.now())\n    setMatchMistakes(0)\n  }\n\n  return (\n    <BackgroundContainer container>\n      <ResumeSection start={startGame} />\n      <RulesSection start={startGame} />\n    </BackgroundContainer>\n  )\n}\n\nexport default Landing\n","import { createMuiTheme } from '@material-ui/core'\n\nexport default createMuiTheme()\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\n// Custom Components\nimport BodyContent from './pages/components/BodyContent'\nimport Footer from './pages/components/Footer'\nimport Gameboard from './pages/gameboard/index'\nimport Games from './pages/games/index'\nimport Header from './pages/components/Header'\nimport Landing from './pages/landing/index'\nimport Theme from './core/theme'\n// Others\nimport * as colors from './constants/colors'\n\nconst StyledCanvas = styled.div`\n  background-color: ${colors.lividBrown};\n  font-family: !important ${'Roboto, Regular, Helvetica'};\n  overflow: hidden;\n  text-align: center;\n`\n\nfunction App() {\n  return (\n    // REACT ROUTER DOM ROOT\n    <StyledCanvas className=\"App\">\n      <ThemeProvider theme={Theme}>\n        <BrowserRouter>\n          <Header />\n\n          <BodyContent className=\"App\">\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route exact path='/jogos' component={Games} />\n              <Route exact path='/jogar' component={Gameboard} />\n              <Route path='/' component={Landing} />\n            </Switch>\n          </BodyContent>\n\n          <Footer />\n        </BrowserRouter>\n      </ThemeProvider>\n    </StyledCanvas>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// Style static Files\nimport './static/css/index.css'\nimport './static/js/toastfyStyles'\n// Custom components\nimport './firebase/firebase'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}